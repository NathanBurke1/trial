Most of the diagrams in this project don't represent the current state of the code,
as they were created before the code was written, and the code is not yet finished.
They are meant to illustrate the intended design and architecture of the system.

In The Effect.cs file, there will need to be a new method for each new effect as they all act differently.
Currently there are 3 effects I have in mind:

- Split: This effect will split the current entity into 3 entities, each with quarter the stats of the original.
         - This repeats until the entity has less than 2 health, at which point it will stop splitting.
         - Activates on death of the entity.

- Explode: This effect will cause the entity to explode, dealing damage to all entities in a certain radius.
         - Deals upto 50% of the entity's health as damage to the player
         - Deals upto 25% of the entity's health as damage to other entities.
         - Has a radius of 5 tiles and deals less damage the further away the entity is from the explosion.
         - Activates on death of the entity.

- Pull: This effect will pull all entities within a certain radius towards the entity that has this effect.
         - Has a radius of 5 tiles and pulls entities towards the center of the effect.
         - Activates every 10 seconds, pulling entities towards the center of the effect.

Attacks will be modelled as Projectiles these include ranged attacks, melee attacks, and special attacks.
The Projectile class will handle the movement and collision detection of the projectile.
The Projectile class will handle the damage dealt by the projectile,
but not the effects it has on the entity it collides with. Instead this will be handled by the Weapon class if attack belongs to player, otherwise the enemy class.